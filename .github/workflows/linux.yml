on:
  #schedule:
  #  - cron: '30 6 * * *' #0630 UTC kick off full build and regression
  #push:
  #  branches: [ ci/* ]
  workflow_dispatch:
    inputs:
      runTests:
        description: "Run tests?"
        required: false
        type: boolean
        default: false

env:
  AWS_REGION: us-east-1
  AWS_SUBNET_ID: subnet-097642e5c610e7583
  AWS_SG_ID: sg-0ca7912782cf1538b
  AMI_ID: ami-03a6eb9ec6101d323
  AWS_INSTANCE_TYPE: c5a.16xlarge
  OS: linux
  KEY_PAIR: win
jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: tundranerd/ec2-multiple-github-runners@multi-os-multi-runner
        with:
          mode: start
          key-pair: ${{ env.KEY_PAIR }}
          os: ${{ env.OS }}
          github-token: ${{ secrets.GH_TOKEN}}
          ec2-image-id: ${{ env.AMI_ID}}
          ec2-instance-type: ${{ env.AWS_INSTANCE_TYPE }}
          subnet-id: ${{ env.AWS_SUBNET_ID }}
          security-group-id: ${{ env.AWS_SG_ID }}
          wait-for-registry-timeout: 2
          aws-resource-tags: > # optional, requires additional permissions
            [
              {"Key": "Name", "Value": "ec2-github-runner"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"},
              {"Key": "os", "Value": "${{ env.OS }}"}
            ]
  build:
    name: Clone and build
    needs:
      - start-runner # required to get output from the start-runner job
    runs-on: ${{ needs.start-runner.outputs.label }} # run the job on the newly created runner
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: |
          ci/linux.sh
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: febio3-${{runner.os}}-${{runner.arch}}
          path: cmbuild/bin
  tests:
    if: ${{inputs.runTests}}
    name: Run test suite
    needs:
      - start-runner # required to get output from the start-runner job
      - build
    runs-on: ${{ needs.start-runner.outputs.label }} # run the job on the newly created runner
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - uses: actions/download-artifact@v3
        with:
          name: febio3-${{runner.os}}-${{runner.arch}}
          path: cmbuild/bin
      - name: Run test suite
        run: |
          ci/linux-test.sh
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: testsuite-${{runner.os}}-${{runner.arch}}-logs
          path: |
            TestSuite/Verify3/*.log
            TestSuite/Logs*.txt
  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - start-runner # required to get output from the start-runner job
      - tests # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Stop EC2 runner
        uses: tundranerd/ec2-multiple-github-runners@multi-os-multi-runner
        with:
          mode: stop
          os: ${{ env.OS }}
          wait-for-deregistry-timeout: 5
          github-token: ${{ secrets.GH_TOKEN}}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
