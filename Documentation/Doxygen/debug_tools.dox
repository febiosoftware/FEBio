/**
\page debug_tools Debugging Tools

Although the compiler and IDE debugging tools are the best tools for debugging an implementation, the FECore library also provides some useful tools that can help debug your code. 

In order the use the FECore debugging tools, you must include the following header file. 

\code
#include <FECore/fecore_debug.h>
\endcode

The FECore debugging tools are most easily accessed via a set of predefined macros. The following macros are available.

1. fecore_watch: Tells the FECore debugger to track the value of a variable. 
2. fecore_print: Prints the value of a watched variable to the screen. 
3. fecore_break: Brings up a command prompt from which users can inspect watched variables.

The FECore debugger manages so-called watched variables. A watched variable can be declared using the \c fecore_watch macro. 

\code
int a;
vec3d r;
fecore_watch(a);
fecore_watch(r);
\endcode

Most variables can be made into watched variables, including most of FEBio's tensor classes (e.g. vec3d, mat3ds). 

The value of a watched variable can be printed to the screen via the \c fecore_print macro. 

\code

\\ declare watched variable
mat3ds s;
fecore_watch(s);

\\ calculate s

\\ print the value to the screen
fecore_print(s);

\endcode

An alternative, and often more convenient, way for inspecting watched variables, is by setting a break point via the fecore_break macro. 

\code

\\ declare watched variable
mat3ds s;
fecore_watch(s);

\\ calculate s

\\ interrupt FEBio and bring up the febio prompt. 
fecore_break();

\endcode

When the code reaches the breakpoint, FEBio will bring up a command prompt. At this prompt users can enter several commands:

\li <b>cont</b>: continue running FEBio.
\li <b>print</b>: print the value of a watched variable.
\li <b>list</b>: list all the watched variable names.
\li <b>remove</b>: remove this break point
\li <b>help</b>: print the list of available commands.


*/
